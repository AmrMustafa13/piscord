// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                  String             @id @default(uuid())
  userName            String             @unique
  nickName            String
  email               String             @unique
  password            String
  dateOfBirth         DateTime
  ownedservers        server[]           @relation("owned")
  participatedservers server[]
  messages            message[]
  verificationTokens  VerificationToken?
}

model server {
  id         String     @id @default(uuid())
  name       String
  createdAt  DateTime   @default(now())
  owner      user       @relation("owned", fields: [ownerId], references: [id],onDelete: Cascade)
  ownerId    String
  members    user[]
  categories category[]
}

model category {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  server    server    @relation(fields: [serverId], references: [id],onDelete: Cascade)
  serverId  String
  channels  channel[]
}

model channel {
  id         String    @id @default(uuid())
  name       String
  createdAt  DateTime  @default(now())
  category   category  @relation(fields: [categoryId], references: [id],onDelete: Cascade)
  categoryId String
  messages   message[]
}

model message {
  id         String   @id @default(uuid())
  content    String
  createdAt  DateTime @default(now())
  channel    channel  @relation(fields: [channelId], references: [id],onDelete: Cascade)
  channelId  String
  userSent   user     @relation(fields: [userSentId], references: [id],onDelete: Cascade)
  userSentId String
}

model VerificationToken {
  id         String  @id @default(uuid())
  token      String  @unique
  isVerified Boolean @default(false)
  user       user    @relation(fields: [userId], references: [id])
  userId     String  @unique
}
